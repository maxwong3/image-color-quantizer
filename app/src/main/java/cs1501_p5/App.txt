/**
 * A driver for CS1501 Project 5
 * @author	Dr. Farnan
 */

package cs1501_p5;

import java.awt.image.BufferedImage;
import java.io.*;
import javax.imageio.ImageIO;
import java.util.HashMap;
import java.util.Map;

public class App {
    public static void main(String[] args) {
        Pixel[][] genStripedArr = new Pixel[][]{
                {new Pixel(5, 5, 5), new Pixel(5, 5, 5), new Pixel(5, 5, 5)},
                {new Pixel(50, 50, 50), new Pixel(50, 50, 50), new Pixel(50, 50, 50)},
                {new Pixel(100, 100, 100), new Pixel(100, 100, 100), new Pixel(100, 100, 100)},
                {new Pixel(150, 150, 150), new Pixel(150, 150, 150), new Pixel(150, 150, 150)},
                {new Pixel(200, 200, 200), new Pixel(200, 200, 200), new Pixel(200, 200, 200)},
                {new Pixel(250, 250, 250), new Pixel(250, 250, 250), new Pixel(250, 250, 250)}};
        
        Pixel[][] stripedArr = genStripedArr;
    
        DistanceMetric_Inter dm = new SquaredEuclideanMetric();
        ColorMapGenerator_Inter generator = new ClusteringMapGenerator(dm);
        ColorQuantizer cq = new ColorQuantizer(stripedArr, generator);
        Pixel[][] quantArr = cq.quantizeTo2DArray(4);
        for (int i = 0; i < quantArr.length; i++) {
            for (int j = 0; j < quantArr[i].length; j++) {
                System.out.print(quantArr[i][j] + " ");
            }
            System.out.println();
        }
        
        try {
            // Load bitmap image
            BufferedImage image = ImageIO.read(new File("build/resources/main/image.bmp"));

            // Create pixel matrix
            Pixel[][] pixelMatrix = Util.convertBitmapToPixelMatrix(image);
            Pixel[] bmpPalette = generator.generateColorPalette(pixelMatrix, 8);
            ColorQuantizer_Inter cq2 = new ColorQuantizer("build/resources/main/image.bmp", generator);
            cq2.quantizeToBMP("build/resources/main/pixel_matrix.txt", 8);
            // Map<Pixel, Pixel> bmpMap = generator2.generateColorMap(pixelMatrix, bmpPalette);
        } catch (Exception e) {
            // This is very bad exception handling, but is only a proof of concept
            e.printStackTrace();
        }
    }
}
